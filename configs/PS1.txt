# Add git branch if its present to PS1
parse_git_branch() {
 git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}
if [ "$color_prompt" = yes ]; then
 PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\h\[\033[00m\]:\[\033[01;34m\]\W\[\033[01;31m\]$(parse_git_branch)\[\033[00m\]\$ '
else
 PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w$(parse_git_branch)\$ '
fi
unset color_prompt force_color_prompt

***
Damian's hack for a coloured prompt.
prompt_git ()       
{                                                               
    git symbolic-ref HEAD &> /dev/null || return 1;
    local HEAD="$(git symbolic-ref HEAD 2>/dev/null)";                                                                                
    local BRANCH="${HEAD#refs/heads/}"; 
    if [[ $BRANCH = "master" ]];then                                                                                              
        printf '%b(git:%s)' "\033[0;31m" "${BRANCH:-unknown}"       
    else
        printf '%b(git:%s)' "\033[0;32m" "${BRANCH:-unknown}"  
    fi
}
if [ "$color_prompt" = yes ]; then
    if ! git symbolic-ref HEAD &> /dev/null;then
        PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]: \[\033[01;32m\]\w\[\033[00m\] $ '
    else
        PS1='\[\033[01;32m\]\h: \w\[\033[01;32m\]$(prompt_git)\n\[\033[00m\]  $\[\033[00m\] '
    fi
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
